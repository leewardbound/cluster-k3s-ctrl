---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 7.3.7
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  values:
    replicas: 1
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      #GF_AUTH_GENERIC_OAUTH_NAME: "BoundCorp.net"
      #GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      #GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${SECRET_PUBLIC_DOMAIN}/application/o/authorize/
      #GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.${SECRET_PUBLIC_DOMAIN}/application/o/token/
      #GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.${SECRET_PUBLIC_DOMAIN}/application/o/userinfo/
      #GF_AUTH_SIGNOUT_REDIRECT_URL: https://auth.${SECRET_PUBLIC_DOMAIN}/application/o/grafana/end-session/
      #GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "${SECRET_GRAFANA_OIDC_CLIENT_ID}"
      #GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "${SECRET_GRAFANA_OIDC_CLIENT_SECRET}"
      # Optionally enable auto-login (bypasses Grafana login screen)
      # GF_AUTH_OAUTH_AUTO_LOGIN: "true"
      # Optionally map user groups to Grafana roles
      #GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"

    adminPassword: "${SECRET_GRAFANA_PASSWORD}"
    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_PUBLIC_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: false
      smtp:
        enabled: true
        host: ${SECRET_SES_SMTP_HOST}:${SECRET_SES_SMTP_PORT}
        user: ${SECRET_SES_ACCESS_KEY}
        password: ${SECRET_SES_SECRET_KEY}
        from_address: ${SECRET_SES_SMTP_FROM_EMAIL}

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus:9090/
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway:80
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "nginx-public"
      annotations:
        hamijari.io/enable: "true"
        hamijari.io/group: "monitoring"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_PUBLIC_DOMAIN}"
        external-dns/is-public: "true"
      hosts:
        - &host "grafana.${SECRET_PUBLIC_DOMAIN}"
      tls:
        - hosts:
            - *host
    serviceAccount:
      create: true
      autoMount: true
    persistence:
      enabled: true
      storageClassName: local-path
