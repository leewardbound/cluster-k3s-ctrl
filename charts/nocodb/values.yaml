# -- Server replicas
replicas: 1
# -- Custom priority class for different treatment by the scheduler
priorityClassName:

image:
  repository: nocodb/nocodb
  tag: 0.98.1
  pullPolicy: IfNotPresent
  pullSecrets: []

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
  labels: {}
  hostname: nocodb.domain.tld
  tls:
    - hosts: []
      secretName: ""
labels:

env:
  NC_AUTH_JWT_SECRET: "change_me"
  NC_PUBLIC_URL: "https://changeme"
  NC_INVITE_ONLY_SIGNUP: true
  NC_REDIS_URL: redis://

envFrom: []
#  - configMapRef:
#      name: special-config

envValueFrom: {}
#  NOCODB_VAR_NAME:
#    secretKeyRef:
#      key: password
#      name: my-secret

service:
  # -- Service that is created to access nocodb
  enabled: true
  type: ClusterIP
  port: 80
  name: http
  protocol: TCP
  labels: {}
  annotations: {}

volumes:
  data:
    enabled: true
    storageClass: default
    size: 50Gi
    mountPath: /usr/app/data

volumeMounts: []

# -- affinity applied to the deployments
affinity: {}

# -- nodeSelector applied to the deployments
nodeSelector: {}

resources:
  server: {}
  worker: {}

# WARNING: liveness and readiness probes are disabled, i am having some trouble with the /health/ endpoint
livenessProbe:
  # -- enables or disables the livenessProbe
  enabled: false
  httpGet:
    # -- liveness probe url path
    path: /_health/
    port: http
  initialDelaySeconds: 50
  periodSeconds: 10

readinessProbe:
  enabled: false
  httpGet:
    path: /_health/
    port: http
  initialDelaySeconds: 50
  periodSeconds: 10

prometheus:
  serviceMonitor:
    create: false
    interval: 30s
    scrapeTimeout: 3s
  rules:
    create: false


postgresql:
  # -- enable the bundled bitnami postgresql chart
  enabled: true
  auth:
    postgresPassword: "nocodb"
    database: "nocodb"
  postgresqlPassword: "nocodb"
  postgresqlDatabase: "nocodb"
  persistence:
    enabled: true
  #   storageClass:
  #   accessModes:
  #     - ReadWriteOnce

redis:
  # -- enable the bundled bitnami redis chart
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    disableCommands: []
  replica:
    disableCommands: []
