---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: self-hosted
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 3.3.3
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system

  values:

    env:
      PHP_MEMORY_LIMIT: 256M

    replicaCount: 1
    image:
      repository: nextcloud
      tag: 25.0.1-apache
      pullPolicy: IfNotPresent

    ingress:
      enabled: true
      className: "nginx-public"
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/group: "business"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_PUBLIC_DOMAIN}"
        external-dns/is-public: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }
          location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }
          location ^~ /.well-known {
            # The rules in this block are an adaptation of the rules
            # in .htaccess that concern /.well-known.
            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav  { return 301 /remote.php/dav/; }
            location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
            location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
            # Let Nextcloud's API for /.well-known URIs handle all other
            # requests by passing them to the front-end controller.
            return 301 /index.php$request_uri;
          }
          # Rules borrowed from .htaccess to hide certain paths from clients
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
          # Rule borrowed from .htaccess
          #location /remote {
          #    return 301 /remote.php$request_uri;
          #}
      path: /
      pathType: Prefix
      tls:
        - secretName: nextcloud-tls
          hosts:
            - "cloud.${SECRET_PUBLIC_DOMAIN}"

    nextcloud:
      host: cloud.${SECRET_PUBLIC_DOMAIN}
      username: admin
      password: ${SECRET_NEXTCLOUD_ADMIN_PASSWORD}
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: ${SECRET_PUBLIC_DOMAIN}
        smtp:
          host: ${SECRET_SES_SMTP_HOST}
          secure: ssl
          port: ${SECRET_SES_SMTP_PORT}
          authtype: LOGIN
          name: ${SECRET_SES_ACCESS_KEY}
          password: ${SECRET_SES_SECRET_KEY}

      datadir: /var/www/html/data
      defaultConfigs:
        .htaccess: true
        apache-pretty-urls.config.php: true
        apcu.config.php: true
        apps.config.php: true
        autoconfig.php: false
        redis.config.php: false
        smtp.config.php: true
      configs:
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'overwrite.cli.url' => 'https://cloud.${SECRET_PUBLIC_DOMAIN}',
            'overwriteprotocol' => 'https',
            'filelocking.enabled' => 'true',
            'loglevel' => '2',
            'trusted_proxies' =>
              array(
                0 => '${NETWORK_K8S_CLUSTER_CIDR}',
                1 => '${NETWORK_K8S_SERVICE_CIDR}',
                2 => '10.0.0.0/8',
              ),
              'forwarded_for_headers' =>
              array (
                0 => 'HTTP_X_FORWARDED_FOR',
              ),
          );
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: nextcloud-postgresql
      username: nextcloud
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-db
        usernameKey: username
        passwordKey: password

    persistence:
      enabled: true
      existingClaim: nextcloud-config
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    rbac:
      enabled: true
    redis:
      enabled: true
